# -*- coding: utf-8 -*-
"""filtresVFINAL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TX2KiSyZgxYtxAULAQ98iswfTuwgrt9G
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install opencv-python

import os
import cv2

# Chemin vers le dossier contenant les images d'entraînement classées par classe
train_data_dir = '/content/drive/MyDrive/datafinal'
# Chemin vers le nouveau répertoire pour enregistrer les images filtrées
filtered_data_dir = '/content/drive/MyDrive/data_finalV2'





# Fonction de filtrage : Amélioration du contraste
def contrast_enhancement(image, alpha=1.5, beta=0):
    # Appliquer la transformation affine pour renforcer le contraste
    enhanced_image = cv2.convertScaleAbs(image, alpha=alpha, beta=beta)

    return enhanced_image

# Parcourez les dossiers de chaque classe (0, 1, 2, 3, 4) dans le dossier d'entraînement
for class_folder in os.listdir(train_data_dir):
    class_path = os.path.join(train_data_dir, class_folder)

    # Créez un sous-répertoire dans "data_finalV2" pour chaque classe s'il n'existe pas déjà
    filtered_class_dir = os.path.join(filtered_data_dir, class_folder)
    if not os.path.exists(filtered_class_dir):
        os.mkdir(filtered_class_dir)

    # Parcourez les images de chaque classe et appliquez l'amélioration du contraste
    for file in os.listdir(class_path):
        if file.endswith('.jpg'):
            image_path = os.path.join(class_path, file)
            img = cv2.imread(image_path)

            # Appliquez l'amélioration du contraste en utilisant votre fonction de filtrage
            filtered_img = contrast_enhancement(img)
            print("image filtrer")

            # Enregistrez l'image filtrée dans le répertoire approprié dans "data_finalV2"
            filtered_image_path = os.path.join(filtered_class_dir, file)
            cv2.imwrite(filtered_image_path, filtered_img)

# Vous avez maintenant enregistré les images avec amélioration du contraste dans le répertoire "data_finalV2".